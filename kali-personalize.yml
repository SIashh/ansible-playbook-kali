---
# Playbook for Kali
## Install Oh-My-Zsh as root
- hosts: kali
  become: false
  tasks:
    - name: Include Oh-My-Zsh role
      include_role:
        name: gantsign.oh-my-zsh
      vars:
        users:
          - username: "{{ kali_user }}"

## Personalize Kali
- hosts: kali
  become: true
  become_user: "{{ kali_user }}"
  tasks:
    - name: Set home directory fact
      ansible.builtin.set_fact:
        kali_user_homedir: "{{ lookup('env','HOME') }}"

    - name: Set desktop environment fact
      ansible.builtin.set_fact:
        kali_desktop_environment: "{{ lookup('env','XDG_CURRENT_DESKTOP') | lower }}"

    - name: Ensure local applications directory exists
      ansible.builtin.file:
        path: "{{ kali_user_homedir }}/.local/share/applications"
        state: directory
        owner: "{{ kali_user }}"
        group: "{{ kali_user }}"
        mode: 0750

    - name: Change ownership of /opt/
      become: true
      become_user: root
      ansible.builtin.file:
        path: "/opt"
        state: directory
        recurse: yes
        owner: "{{ kali_user }}"
        group: "{{ kali_user }}"

    ### Configure Gnome settings ###
    - block:
        - name: Find Burp Suite desktop files
          find:
            paths: 
              - "{{ burpsuite_dir }}/.install4j"
            patterns: "*.desktop"
            file_type: any
          register: burpsuite_desktop_files

        - name: Set Burp Suite desktop file name
          ansible.builtin.set_fact:
            burpsuite_desktop_file_name: "{{ burpsuite_desktop_files.files[0].path | basename }}"
          when: burpsuite_desktop_files.matched > 0

        - name: Tweak Gnome settings
          ansible.builtin.command: "gsettings set {{ item.schema }} {{ item.path }} {{ item.key }}"
          loop: "{{ gnome_settings }}"

        - name: Get current terminal profile
          ansible.builtin.command: gsettings get org.gnome.Terminal.ProfilesList default
          changed_when: false
          register: terminal_profile

        # Gnome terminal settings
        - name: Configure Terminal settings
          ansible.builtin.command: "gsettings set org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:{{ terminal_profile.stdout | regex_replace('''') }}/ {{ item.path }} {{ item.key }}"
          loop: "{{ gnome_terminal_settings }}"
      when: "kali_desktop_environment == 'gnome'"

    # ### XFCE settings
    # - name: Apply XFCE settings
    #   xfconf:
    #     channel: "{{ item.channel }}"
    #     property: "{{ item.property }}"
    #     value_type: "{{ item.type }}"
    #     value: "{{ item.value }}"
    #   loop: "{{ xfce_settings }}"
    #   when: "kali_desktop_environment == 'xfce'"

    - name: Copy ZSH config
      ansible.builtin.copy:
        src: "files/zsh/.zshrc"
        dest: "{{ kali_user_homedir }}/.zshrc"
        mode: 0640
    
    - name: Install zsh-autosuggestions
      git:
        repo: "https://github.com/zsh-users/zsh-autosuggestions/"
        dest: "{{ kali_user_homedir }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        version: "master"
        force: true

    - name: Copy bash_aliases config
      ansible.builtin.copy:
        src: "files/zsh/.bash_aliases"
        dest: "{{ kali_user_homedir }}/.bash_aliases"
        mode: 0640
    
    #- name: Change default shell to ZSH
    #  user:
    #    name: "{{ kali_user }}"
    #    shell: /bin/zsh

    ### Configure tmux ###
    - name: Copy tmux config
      ansible.builtin.copy:
        src: "files/tmux/.tmux.conf"
        dest: "{{ kali_user_homedir }}/.tmux.conf"
        mode: 0640

    ### Firefox personalization ###
    - name: Set firefox_default_profile_dir fact
      ansible.builtin.set_fact:
        firefox_default_profile_dir: "{{ kali_user_homedir }}/.mozilla/firefox/hacker.firefox-esr"

    - name: Check if Firefox profile exists
      stat:
        path: "{{ firefox_default_profile_dir }}"
      register: firefox_profile

    - name: Create FireFox default profile
      ansible.builtin.command: "firefox-esr -CreateProfile \"dts {{ firefox_default_profile_dir }}\""
      when: not firefox_profile.stat.exists

    - name: Copy Firefox desktop file
      ansible.builtin.copy:
        src: files/firefox/hacker-firefox-esr.desktop
        dest: "{{ kali_user_homedir }}/.local/share/applications/hacker-firefox-esr.desktop"
        mode: 0640

    - name: Create temporary directory
      tempfile:
        state: directory
        suffix: firefox
      register: firefox_tempdir
      changed_when: false

    - name: Create temporary file
      tempfile:
        state: file
        suffix: user.js
      register: firefox_temp_userjs
      changed_when: false

    - name: Copy user.js for Firefox user preferences
      ansible.builtin.copy:
        src: files/firefox/user.js
        dest: "{{ firefox_tempdir.path }}/kali.js"
      changed_when: false

    - name: Copy user.js from quieter-firefox
      ansible.builtin.copy:
        src: /opt/quieter-firefox-git/user.js
        dest: "{{ firefox_tempdir.path }}/quieter.js"
        remote_src: true
      changed_when: false

    - name: Assemble from fragments from a directory
      assemble:
        src: "{{ firefox_tempdir.path }}"
        dest: "{{ firefox_temp_userjs.path }}"
      changed_when: false

    - name: Copy user.js from quieter-firefox
      ansible.builtin.copy:
        src: "{{ firefox_temp_userjs.path }}"
        dest: "{{ firefox_default_profile_dir }}/user.js"
        remote_src: true
        mode: 0640

    - name: Delete temp dir and file
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ firefox_tempdir.path }}"
        - "{{ firefox_temp_userjs.path }}"
      changed_when: false

    ### SciTE user properties ###
    # - name: Copy SciTE user properties
    #   copy:
    #     src: "files/scite/.SciTEUser.properties"
    #     dest: "{{ kali_user_homedir }}/.SciTEUser.properties"
    #     mode: 0640

    ### VS Code ###
    - name: Ensure VS Code user directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: 0700
      loop:
        - "{{ kali_user_homedir }}/.config/Code/User"
        - "{{ kali_user_homedir }}/.vscode"

    - name: Copy VS Code settings
      ansible.builtin.copy:
        src: files/vscode/settings.json
        dest: "{{ kali_user_homedir }}/.config/Code/User/settings.json"
        mode: 0640

    - name: Install VS Code extensions
      ansible.builtin.command: "code --user-data-dir ~/.vscode --install-extension {{ item }}"
      loop: "{{ vscode_extensions | default([]) }}"
      register: vscode_install_extension_result
      changed_when: "'successfully installed' in vscode_install_extension_result.stdout"

    ### GDB ###
    - name: Clone GEF repo
      git:
        repo: "https://github.com/hugsy/gef.git"
        dest: "{{ kali_user_homedir }}/gef"
        force: true

    - name: Copy gdb user properties
      ansible.builtin.copy:
        src: "files/gdb/.gdbinit"
        dest: "{{ kali_user_homedir }}/.gdbinit"
        mode: 0640

    ## Metasploit user properties ###
    - name: Ensure Metasploit user directories exist (~/.msf4)
      ansible.builtin.file:
        path: "{{ kali_user_homedir }}/.msf4/"
        state: directory
        mode: 0700

    - name: Copy Metasploit user properties
      ansible.builtin.copy:
        src: "files/metasploit/msfconsole.rc"
        dest: "{{ kali_user_homedir }}/.msf4/msfconsole.rc"
        mode: 0640

    ## Create directory ~/.CMD_LOG
    - name: Create PASSI directory log (~/.CMD_LOG)
      ansible.builtin.file:
        path: "{{ kali_user_homedir }}/.CMD_LOG/"
        state: directory
        mode: 0700

